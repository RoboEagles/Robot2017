// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4579.Robot2017.subsystems;

import org.usfirst.frc4579.Robot2017.RobotMap;
import org.usfirst.frc4579.Robot2017.commands.*;
import org.usfirst.frc4579.instrumentation.FRCSmartDashboard;

import edu.wpi.first.wpilibj.AnalogInput;

import edu.wpi.first.wpilibj.command.Subsystem;

/**
 *
 */
public class UltraSonic extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final AnalogInput left = RobotMap.ultraSonicLeft;
    private final AnalogInput right = RobotMap.ultraSonicRight;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void setGlobalSampleRate (){
    	AnalogInput.setGlobalSampleRate(62500);
    }
    
    
    public void read () {
    	
    	int    leftValue  = left.getValue();
    	double leftVolts  = left.getVoltage();
    	int    leftValueAvg = left.getAverageValue();
    	double leftVoltsAvg = left.getAverageVoltage();
    	
    	FRCSmartDashboard.setLeftAnalogValue(leftValue);
    	FRCSmartDashboard.setLeftAnalogVoltage(leftVolts);
    	FRCSmartDashboard.setLeftAnalogValueAvg(leftValueAvg);
    	FRCSmartDashboard.setLeftAnalogVoltageAvg(leftVoltsAvg);
    	
    	int    rightValue = right.getValue();
    	double rightVolts = right.getVoltage();
    	
    	FRCSmartDashboard.setRightAnalogValue(rightValue);
    	FRCSmartDashboard.setRightAnalogVoltage(rightVolts);	
    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
    	setDefaultCommand(new DefaultDrive());
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
}

