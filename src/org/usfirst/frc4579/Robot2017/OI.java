// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4579.Robot2017;

import org.usfirst.frc4579.Robot2017.commands.*;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton laserButton;
    public JoystickButton forwardButton;
    public JoystickButton reverseButton;
    public JoystickButton driveServoButton;
    public Joystick joystick;
    public Joystick liftJoystick;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        liftJoystick = new Joystick(1);
        
        joystick = new Joystick(0);
        
        driveServoButton = new JoystickButton(joystick, 3);
        driveServoButton.whileHeld(new driveServo());
        reverseButton = new JoystickButton(joystick, 7);
        reverseButton.whenPressed(new reverseDrive());
        forwardButton = new JoystickButton(joystick, 6);
        forwardButton.whenPressed(new forwardDrive());
        laserButton = new JoystickButton(joystick, 2);
        laserButton.whileHeld(new LaserDistance());


        // SmartDashboard Buttons
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
        SmartDashboard.putData("Default Drive", new DefaultDrive());
        SmartDashboard.putData("Climb", new Climb());
        SmartDashboard.putData("LaserDistance", new LaserDistance());
        SmartDashboard.putData("FindPeg", new FindPeg());
        SmartDashboard.putData("Auto_PlaceGear: left", new Auto_PlaceGear("left"));
        SmartDashboard.putData("Auto_PlaceGear: right", new Auto_PlaceGear("right"));
        SmartDashboard.putData("Auto_PlaceGear: center", new Auto_PlaceGear("center"));
        SmartDashboard.putData("FacePeg", new FacePeg());
        SmartDashboard.putData("forwardDrive", new forwardDrive());
        SmartDashboard.putData("reverseDrive", new reverseDrive());
        SmartDashboard.putData("driveServo", new driveServo());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getJoystick() {
        return joystick;
    }

    public Joystick getLiftJoystick() {
        return liftJoystick;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}
